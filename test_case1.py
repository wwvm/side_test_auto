# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCase1():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_case1(self):
    self.driver.get("http://10.124.209.157:9999/login")
    self.driver.set_window_size(1680, 972)
    self.driver.find_element(By.CSS_SELECTOR, ".ng-tns-c82-0 > .ant-input").click()
    self.driver.find_element(By.XPATH, "//input[@type=\'text\']").send_keys("root")
    self.driver.find_element(By.XPATH, "//input[@type=\'password\']").send_keys("Cisco123!")
    self.driver.find_element(By.CSS_SELECTOR, ".login-form-button").click()
    self.driver.find_element(By.LINK_TEXT, "基础设施管理").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ant-table-row:nth-child(1) > .ant-table-cell-fix-left-td > app-td-inner-html span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ant-table-row:nth-child(1) .ng-star-inserted:nth-child(1) > .ng-star-inserted:nth-child(1) > .ng-star-inserted:nth-child(1) > .ng-star-inserted:nth-child(1) path:nth-child(1)").click()
    element = self.driver.find_element(By.LINK_TEXT, "配置管理")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".anticon-close > svg").click()
    self.driver.find_element(By.CSS_SELECTOR, "#cdk-overlay-3 .ant-btn").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#cdk-overlay-3 .ant-btn")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
  
